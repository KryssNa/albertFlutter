# name: Dart

# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3

#       - name: Set up Flutter
#         uses: subosito/flutter-action@v2
#         with:
#           flutter-version: stable
#           channel: stable
#           version: <valid-version>
#           arch: x64


#       - name: Install dependencies
#         run: flutter pub get

#       # Uncomment this step to verify the use of 'dart format' on each commit.
#       # - name: Verify formatting
#       #   run: dart format --output=none --set-exit-if-changed .

#       # Consider passing '--fatal-infos' for slightly stricter analysis.
#       - name: Analyze project source
#         run: dart analyze

#       # Your project will need to have tests in test/ and a dependency on
#       # package:test for this step to succeed. Note that Flutter projects will
#       # want to change this to 'flutter test'.
#       - name: Run tests
#         run: flutter test

name: Dart CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Setup Dart SDK Step 1
      run: sudo apt-get update
    - name: Setup Dart SDK Step 2
      run: sudo apt-get install apt-transport-https
    - name: Setup Dart SDK Step 3
      run: sudo sh -c 'wget -qO- https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -'
    - name: Setup Dart SDK Step 4
      run: sudo sh -c 'wget -qO- https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list'
    - name: Setup Dart SDK Step 5
      run: sudo apt-get update
    - name: Setup Dart SDK Step 6
      run: sudo apt-get -y install dart
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: PATH="$PATH:/usr/lib/dart/bin" flutter pub get
    - name: Run tests
      run: PATH="$PATH:/usr/lib/dart/bin" pub run test
    - name: Run analyzer
      run: PATH="$PATH:/usr/lib/dart/bin" dartanalyzer --fatal-infos --fatal-warnings .
      if: always()
    - name: Run dartfmt
      run: PATH="$PATH:/usr/lib/dart/bin" dartfmt -n --set-exit-if-changed .
      if: always()
